name: CI - Products-Main

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run integration tests
        run: |
          docker compose -f docker-compose.int_test.yml up --build --abort-on-container-exit --exit-code-from integration_tests
          docker compose -f docker-compose.int_test.yml down -v
        env:
          PRODUCTS_SERVICE_DB_URL: ${{ secrets.PRODUCTS_SERVICE_TEST_DB_URL }}
          REVIEWS_SERVICE_DB_URL: ${{ secrets.REVIEWS_SERVICE_TEST_DB_URL }}
          PRODUCTS_SERVICE_URL: ${{ secrets.PRODUCTS_SERVICE_LOCAL_URL }}
          REVIEWS_SERVICE_URL: ${{ secrets.REVIEWS_SERVICE_LOCAL_URL }}

      - name: Build and push image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/products-service:${{ github.sha }}"
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          docker build -t "$IMAGE_NAME" .
          docker push "$IMAGE_NAME"
          docker tag "$IMAGE_NAME" ${{ secrets.DOCKER_USERNAME }}/products-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/products-service:latest

      
      # - name: Trigger integration tests
      #   uses: peter-evans/repository-dispatch@v3
      #   with:
      #     token: ${{ secrets.GH_PERSONAL_TOKEN }}
      #     repository: icanSolutions/portfolio-project-intergration-test
      #     event-type: products-service-updated
      #     client-payload: '{"image":"${{ steps.build.outputs.image_name }}"}'